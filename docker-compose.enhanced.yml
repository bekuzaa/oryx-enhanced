version: '3.8'

services:
  enhanced-oryx:
    build:
      context: .
      dockerfile: Dockerfile.enhanced
    container_name: enhanced-oryx
    restart: unless-stopped
    ports:
      - "2022:2022"    # Oryx HTTP API
      - "1935:1935"    # RTMP
      - "8080:8080"    # HLS/HTTP-FLV
      - "1985:1985"    # SRS HTTP API
      - "10080:10080"  # SRT (with StreamID)
      - "10081:10081"  # SRT (without StreamID, stream 1)
      - "10082:10082"  # SRT (without StreamID, stream 2)
      - "80:80"        # Nginx
    environment:
      - REDIS_ADDR=redis:6379
      - SRS_CONFIG=/app/config/srs.conf
      - ORYX_LOG_LEVEL=info
      - ORYX_ENABLE_HLS_INPUT=true
      - ORYX_ENABLE_SRT_INPUT=true
      - ORYX_ENABLE_BYPASS_TRANSCODE=true
      - ORYX_ENABLE_MONITORING=true
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
      - ./hls:/app/objs/nginx/html/hls
    depends_on:
      - redis
    networks:
      - oryx-network
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: oryx-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - oryx-network
    command: redis-server --appendonly yes --bind 0.0.0.0

  # Optional: Monitoring with Prometheus and Grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: oryx-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - oryx-network

  grafana:
    image: grafana/grafana:latest
    container_name: oryx-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - oryx-network
    depends_on:
      - prometheus

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  oryx-network:
    driver: bridge
